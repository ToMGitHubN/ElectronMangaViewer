{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"electron\"","webpack:///external \"url\"","webpack:///external \"path\"","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","require","mainWindow","electron__WEBPACK_IMPORTED_MODULE_0__","on","process","platform","quit","height","width","loadURL","url__WEBPACK_IMPORTED_MODULE_2__","pathname","path__WEBPACK_IMPORTED_MODULE_1__","__dirname","protocol","slashes","webContents","openDevTools"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAjB,GACAY,OAAAC,eAAAb,EAAA,cAAiDkB,OAAA,KAIjDpB,EAAAqB,EAAA,SAAAlB,GACA,IAAAS,EAAAT,KAAAmB,WACA,WAA2B,OAAAnB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAU,EAAAC,GAAsD,OAAAV,OAAAW,UAAAC,eAAAnB,KAAAgB,EAAAC,IAGtDxB,EAAA2B,EAAA,GAIA3B,IAAA4B,EAAA,mBCnEAzB,EAAAD,QAAA2B,QAAA,2BCAA1B,EAAAD,QAAA2B,QAAA,sBCAA1B,EAAAD,QAAA2B,QAAA,sECIA,IAAIC,EAEJC,EAAA,IAAIC,GAAG,oBAAqB,KACC,WAArBC,QAAQC,UACRH,EAAA,IAAII,SAIZJ,EAAA,IAAIC,GAAG,QAAS,MACZF,EAAa,IAAIC,EAAA,eACbK,OAAQ,IACRC,MAAO,QAGAC,QACPC,EAAA,QACIC,SAAUC,EAAA,KAAUC,UAAW,gBAC/BC,SAAU,QACVC,SAAS,KAKjBd,EAAWe,YAAYC,eAGvBhB,EAAWE,GAAG,SAAU,KACpBF,EAAa,SAIrBC,EAAA,IAAIC,GAAG,oBAAqB,KACxBD,EAAA,IAAII","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = require(\"electron\");","module.exports = require(\"url\");","module.exports = require(\"path\");","import { app, BrowserWindow, globalShortcut, ipcMain } from \"electron\";\nimport * as path from \"path\";\nimport * as url from \"url\";\n\nlet mainWindow: Electron.BrowserWindow;\n\napp.on(\"window-all-closed\", () => {\n    if (process.platform !== \"darwin\") {\n        app.quit();\n    }\n});\n\napp.on(\"ready\", () => {\n    mainWindow = new BrowserWindow({\n        height: 800,\n        width: 1200\n    });\n\n    mainWindow.loadURL(\n        url.format({\n            pathname: path.join(__dirname, \"./index.html\"),\n            protocol: \"file:\",\n            slashes: true\n        })\n    );\n\n    /* devblock:start */\n    mainWindow.webContents.openDevTools();\n    /* devblock:end */\n\n    mainWindow.on(\"closed\", () => {\n        mainWindow = null;\n    });\n});\n\napp.on(\"window-all-closed\", () => {\n    app.quit();\n});\n"],"sourceRoot":""}